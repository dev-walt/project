@model ProjectTracker.Models.ViewModel.ProjectViewModelDetail

@{
    ViewBag.Title = "AddProject";
    Layout = "~/Views/Shared/Admin_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()



    <div class="form-horizontal">
        <h4><u>Add Project</u></h4>
        <hr />
        <div class="flex-container" style="padding-top:5px">
            <div class="row" style="background-color: antiquewhite">
                <div class="col-sm-1" style="background-color:silver; width: 100px; height: 30px; padding-right: 5px; border: double">
                    <label for="Project Name" style="font-size:x-small">Project Name:</label>
                </div>
                <div class="col-sm-2" style="background-color:silver;width:150px;height:30px;border:double">
                    @Html.EditorFor(model => model.VM.ProjectName, new { htmlAttributes = new { @class = "control-label1" } })
                    @Html.ValidationMessageFor(model => model.VM.ProjectName, "", new { @class = "text-danger" })
                </div>



                <div class="col-sm-1" style="background-color:silver; width: 130px; height: 30px; padding-right: 5px; border: double">
                    <label for="Project Description" style="font-size:x-small">Project Description:</label>
                </div>
                <div class="col-sm-2" style="background-color:silver;width:150px;height:30px;border:double">
                    @Html.EditorFor(model => model.VM.ProjectDescription, new { htmlAttributes = new { @class = "control-label1" } })
                    @Html.ValidationMessageFor(model => model.VM.ProjectDescription, "", new { @class = "text-danger" })
                </div>



                <div class="col-sm-1" style="background-color:silver; width: 100px; height: 30px; padding-right: 5px; border: double">
                    <label for="CR Number" style="font-size:x-small">CR Number:</label>
                </div>
                <div class="col-sm-2" style="background-color:silver;width:150px;height:30px;border:double">
                    @Html.EditorFor(model => model.VM.CRNumber, new { htmlAttributes = new { @class = "control-label1" } })
                    @Html.ValidationMessageFor(model => model.VM.CRNumber, "", new { @class = "text-danger" })
                </div>



                <div class="col-sm-1" style="background-color:silver; width: 70px; height: 30px; padding-right: 5px; border: double">
                    <label for="FPR" style="font-size:x-small">FPR:</label>
                </div>
                <div class="col-sm-2" style="background-color:silver;width:150px;height:30px;border:double">




                    @Html.DropDownListFor(model => model.VM.FPR, (IEnumerable<SelectListItem>)ViewBag.myUsers, new { id = "normalDropDown" })
                    @Html.ValidationMessageFor(model => model.VM.FPR, "", new { @class = "text-danger" })



                </div>
                <div class="col-sm-1" style="background-color:silver; width: 70px; height: 30px; padding-right: 5px; border: double">
                    <label for="Team" style="font-size:x-small">Team:</label>
                </div>
                <div class="col-sm-2" style="background-color:silver;width:100px;height:30px;border:double">
                    @*@Html.EditorFor(model => model.VM.SPR, new { htmlAttributes = new { @class = "control-label1" } })*@



                    @Html.DropDownListFor(model => model.VM.SPR, (IEnumerable<SelectListItem>)ViewBag.myUsers, new { id = "normalDown" })

                    @Html.ValidationMessageFor(model => model.VM.SPR, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="row" style="background-color: antiquewhite;padding-top:2px">
                <div class="col-sm-1" style="background-color:silver; width: 100px; height: 30px; padding-right: 5px; border: double">
                    <label for="Status" style="font-size:x-small">Status:</label>
                </div>
                <div class="col-sm-2" style="background-color:silver;width:150px;height:30px;border:double">
                    @*@Html.EditorFor(model => model.ProjectStatus, new { htmlAttributes = new { @class = "control-label1" } })*@
                    @Html.DropDownListFor(model => model.VM.ProjectStatus, (IEnumerable<SelectListItem>)ViewBag.Options, new { htmlAttributes = new { @class = "list" } })



                    @Html.ValidationMessageFor(model => model.VM.ProjectStatus, "", new { @class = "text-danger" })



                </div>



                <div class="col-sm-1" style="background-color:silver; width: 130px; height: 30px; padding-right: 5px; border: double">
                    <label for="Expected Delivery Date" style="font-size:x-small">Expected Delivery Date:</label>
                </div>
                <div class="col-sm-2" style="background-color:silver;width:150px;height:30px;border:double">
                    @Html.EditorFor(model => model.VM.ExpectedDeliveryDate, new { htmlAttributes = new { @class = "datepicker" } })
                    @Html.ValidationMessageFor(model => model.VM.ExpectedDeliveryDate, "", new { @class = "text-danger" })
                </div>



                <div class="col-sm-1" style="background-color:silver; width: 100px; height: 30px; padding-right: 5px; border: double">
                    <label for="Remarks" style="font-size:x-small">Remarks:</label>
                </div>
                <div class="col-sm-2" style="background-color:silver;width:150px;height:30px;border:double">
                    @Html.EditorFor(model => model.VM.Remark, new { htmlAttributes = new { @class = "control-label1" } })
                    @Html.ValidationMessageFor(model => model.VM.Remark, "", new { @class = "text-danger" })
                </div>



                <div class="col-sm-1" style="background-color:silver; width: 70px; height: 30px; padding-right: 5px; border: double">
                    <label for="Active" style="font-size:x-small">Active:</label>
                </div>
                <div class="col-sm-2" style="background-color:silver;width:150px;height:30px;border:double">
                    @Html.EditorFor(model => model.VM.Active)



                    @Html.ValidationMessageFor(model => model.VM.Active, "", new { @class = "text-danger" })




                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>




        </div>
    </div>
}




<table id="tblCustomers" class="table table-bordered table-hover" cellpadding="0" cellspacing="0">
    <tr>



        <th>
            @Html.DisplayNameFor(model => model.PVM.First().projectName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PVM.First().projectDescription)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PVM.First().CRNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PVM.First().FPR)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PVM.First().team)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PVM.First().expectedDelDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PVM.First().remarks)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PVM.First().status)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PVM.First().isActive)
        </th>



        <th></th>
        <



    </tr>
    @foreach (var item in Model.PVM)
    {
        <tr>



            <td class="ProjectName">
                <span> @item.projectName</span>
                <input type="text" value="@item.projectName" style="display:none" />
            </td>
            <td class="ProjectDescription">
                <span> @item.projectDescription </span>
                <input type="text" value="@item.projectDescription" style="display:none" />
            </td>
            <td class="CRNumber">
                <span> @item.CRNumber </span>
                <input type="text" value="@item.CRNumber" style="display:none" />
            </td>
            <td class="FPR">
                <span> @item.FPR </span>
                <input type="text" value="@item.FPR" style="display:none" />
            </td>
            <td class="SPR">
                <span> @item.team </span>
                <input type="text" value="@item.team" style="display:none" />
            </td>
            <td class="EDD">
                <span> @item.expectedDelDate</span>
                <input type="text" value="@item.expectedDelDate" style="display:none" />
            </td>
            <td class="Remark">
                <span> @item.remarks</span>
                <input type="text" value="@item.remarks" style="display:none" />
            </td>
            <td class="ProjectStatus">
                <span> @item.status </span>
                <input type="text" value="@item.status" style="display:none" />
            </td>
            <td class="Active">
                @*<span> @item.Active </span>*@
                <input type="text" value="@item.isActive" style="display:none" />
            </td>


            <td>
                <a class="Edit" href="javascript:;">Edit</a>
                <a class="Update" href="javascript:;" style="display:none">Update</a>
                <a class="Cancel" href="javascript:;" style="display:none">Cancel</a>
                <a class="Delete" href="javascript:;">Delete</a>




            </td>




        </tr>
    }


</table>



@*@Html.PagedListPager(Model.pvm, i => Url.Action("ViewProject", "Admin", new { i, search = Request.QueryString["search"] }))*@

<script>
    $(function () {



        $(".datepicker").datepicker({
            dateFormat: "yy-mm-dd",
            changeMonth: true,
            changeYear: true
        });
    });



</script>
<script type="text/javascript">
    $(function () {
        $(".listbox").multiselect({
            includeSelectAllOption: true, /*To enable the Select all Option*/
            selectAllValue: 'multiselect-all', /*The value used for the select all option can be configured using the selectAllValue*/
            enableFiltering: true, /*A filter input will be added to dynamically filter all the options*/
            enableCaseInsensitiveFiltering: true, /*To enable Case Insenstitive Filtering (Upper and Lower Case Letters)*/
            maxHeight: '300',
            buttonWidth: '235',
        });
    });
</script>
<script src="~/Scripts/jquery-3.6.0.min.js"></script>

<script src="~/Scripts/bootstrap.min.js"></script>
<script type="text/javascript">




    function AppendRow(row, customerId, name, country) {
        //Bind CustomerId.
        $(".CustomerId", row).find("span").html(customerId);



        //Bind Name.
        $(".Name", row).find("span").html(name);
        $(".Name", row).find("input").val(name);



        //Bind Country.
        $(".Country", row).find("span").html(country);
        $(".Country", row).find("input").val(country);



        row.find(".Edit").show();
        row.find(".Delete").show();
        $("#tblCustomers").append(row);
    };



    // Add event handler.
    $("body").on("click", "#btnAdd", function () {
        var txtName = $("#txtName");
        var txtCountry = $("#txtCountry");
        $.ajax({
            type: "POST",
            url: "/Home/InsertCustomer",
            data: '{name: "' + txtName.val() + '", country: "' + txtCountry.val() + '" }',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (r) {
                var row = $("#tblCustomers tr:last-child");
                if ($("#tblCustomers tr:last-child span").eq(0).html() != "&nbsp;") {
                    row = row.clone();
                }
                AppendRow(row, r.CustomerId, r.Name, r.Country);
                txtName.val("");
                txtCountry.val("");
            }
        });
    });



    //Edit event handler.
    $("body").on("click", "#tblCustomers .Edit", function () {
        var row = $(this).closest("tr");
        $("td", row).each(function () {
            if ($(this).find("input").length > 0) {
                $(this).find("input").show();
                $(this).find("span").hide();
            }
        });
        row.find(".Update").show();
        row.find(".Cancel").show();
        row.find(".Delete").hide();
        $(this).hide();
    });



    //Update event handler.
    $("body").on("click", "#tblCustomers .Update", function () {
        var row = $(this).closest("tr");
        $("td", row).each(function () {
            if ($(this).find("input").length > 0) {
                var span = $(this).find("span");
                var input = $(this).find("input");
                span.html(input.val());
                span.show();
                input.hide();
            }
        });
        row.find(".Edit").show();
        row.find(".Delete").show();
        row.find(".Cancel").hide();
        $(this).hide();



        var customer = {};
        customer.CustomerId = row.find(".CustomerId").find("span").html();
        customer.Name = row.find(".Name").find("span").html();
        customer.Country = row.find(".Country").find("span").html();
        $.ajax({
            type: "POST",
            url: "/Home/UpdateCustomer",
            data: '{customer:' + JSON.stringify(customer) + '}',
            contentType: "application/json; charset=utf-8",
            dataType: "json"
        });
    });



    //Cancel event handler.
    $("body").on("click", "#tblCustomers .Cancel", function () {
        var row = $(this).closest("tr");
        $("td", row).each(function () {
            if ($(this).find("input").length > 0) {
                var span = $(this).find("span");
                var input = $(this).find("input");
                input.val(span.html());
                span.show();
                input.hide();
            }
        });
        row.find(".Edit").show();
        row.find(".Delete").show();
        row.find(".Update").hide();
        $(this).hide();
    });



    //Delete event handler.
    $("body").on("click", "#tblCustomers .Delete", function () {
        if (confirm("Do you want to delete this row?")) {
            var row = $(this).closest("tr");
            var customerId = row.find("span").html();
            $.ajax({
                type: "POST",
                url: "/Home/DeleteCustomer",
                data: '{customerId: ' + customerId + '}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    if ($("#tblCustomers tr").length > 2) {
                        row.remove();
                    } else {
                        row.find(".Edit").hide();
                        row.find(".Delete").hide();
                        row.find("span").html('&nbsp;');
                    }
                }
            });
        }
    });
</script>